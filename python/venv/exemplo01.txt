Criar e gerenciar ambientes virtuais em Python é uma prática fundamental para isolar
dependências de projetos e garantir consistência no desenvolvimento. 
Vamos fazer juntos (a) o passo a passo para criar um novo ambiente virtual e os 
comandos correspondentes para ativá-lo e desativá-lo nos sistemas 
operacionais Mac, Windows e Linux?


# Criar um novo ambiente virtual
python -m venv ./venv

# Criar o ambiente virtual (Mac)
python3 -m venv ./venv

# Ativar o ambiente virtual (Mac/Linux)
source nome_do_ambiente/bin/activate

# Ativar o ambiente virtual (Windows)
.\nome_do_ambiente\Scripts\activate

# Desativar o ambiente virtual
deactivate


Além disso, é altamente recomendado criar um arquivo requirements.txt 
para listar as dependências do projeto. 
Isso facilita a replicação do ambiente em diferentes máquinas e ambientes. 
O arquivo requirements.txt pode ser gerado com o seguinte comando:

pip freeze > requirements.txt


O arquivo requirements.txt é vital para documentar e compartilhar as dependências do projeto.
Ao listar explicitamente as versões das bibliotecas utilizadas,
garantimos que outros desenvolvedores ou sistemas possam reproduzir exatamente 
o mesmo ambiente de desenvolvimento. Isso evita conflitos e assegura que o 
projeto seja executado de maneira consistente em diferentes contextos. 
A virtualização no desenvolvimento com Python é uma prática essencial. 
Ao utilizar ambientes virtuais e o arquivo requirements.txt, 
você garante a coesão do ambiente de desenvolvimento, facilita a colaboração 
entre membros da equipe e promove a portabilidade do projeto.


Lembre-se de criar e ativar seu ambiente virtual antes de iniciar qualquer desenvolvimento, 
garantindo uma experiência de codificação estável e consistente.